#Minimum number of Connections a pool will maintain at any given time
c3p0.minPoolSize=6

#Maximum number of Connections a pool will maintain at any given time.
c3p0.maxPoolSize=30

#The number of milliseconds a client calling getConnection() will wait for a Connection to be checked-in or acquired when the pool is exhausted. 
#Zero means wait indefinitely. 
#Setting any positive value will cause the getConnection() call to time-out and break with an SQLException after the specified number of milliseconds. 
c3p0.checkoutTimeout=30000

#If true, an operation will be performed at every connection checkout to verify that the connection is valid. 
#Be sure to set an efficient preferredTestQuery or automaticTestTable if you set this to true. 
#Performing the (expensive) default Connection test on every client checkout will harm client performance. 
#Testing Connections in checkout is the simplest and most reliable form of Connection testing, but for better performance, consider verifying connections periodically using idleConnectionTestPeriod.
c3p0.testConnectionOnCheckout=false

#Defines how many times c3p0 will try to acquire a new Connection from the database before giving up. 
#If this value is less than or equal to zero, c3p0 will keep trying to fetch a Connection indefinitely.
c3p0.acquireRetryAttempts=30

#Amount of time in ms to wait between successive aquire retry attempts, time c3p0 will wait between acquire attempts. 
c3p0.acquireRetryDelay=1000

#Determines how many connections at a time c3p0 will try to acquire when the pool is exhausted.
c3p0.acquireIncrement=3

#If this is a number greater than 0, c3p0 will test all idle, pooled but unchecked-out connections, every this number of seconds. 
c3p0.idleConnectionTestPeriod=30

#Seconds a Connection can remain pooled but unused before being discarded. Zero means idle connections never expire.
c3p0.maxIdleTime=120

#If true, an operation will be performed asynchronously at every connection checkin to verify that the connection is valid. 
#Use in combination with idleConnectionTestPeriod for quite reliable, always asynchronous Connection testing. 
#Also, setting an automaticTestTable or preferredTestQuery will usually speed up all connection tests.
c3p0.testConnectionOnCheckin=true

#The number of PreparedStatements c3p0 will cache for a single pooled Connection. 
#If set, maxStatementsPerConnection should be set to about the number distinct PreparedStatements that are used frequently in your application, 
#plus two or three extra so infrequently statements don't force the more common cached statements to be culled.
c3p0.maxStatementsPerConnection=0

#If set to a value greater than 0, the statement cache will track when Connections are in use, and only destroy Statements when their parent Connections are not otherwise in use. 
#This parameter should only be set if you observe that attempts by c3p0 to close() cached statements freeze (usually you'll see APPARENT DEADLOCKS in your logs). 
#If set, this parameter should almost always be set to 1. 
c3p0.statementCacheNumDeferredCloseThreads=0

#c3p0 is very asynchronous. Slow JDBC operations are generally performed by helper threads that don't hold contended locks. 
#Spreading these operations over multiple threads can significantly improve performance by allowing multiple operations to be performed simultaneously. 
#If performance seems to drag under heavy load, or if you observe via JMX or direct inspection of a PooledDataSource, that the number of "pending tasks" is usually greater than zero, try increasing numHelperThreads. 
c3p0.numHelperThreads=6